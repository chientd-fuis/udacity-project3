language: node_js
node_js:
  - 13

services:
  - docker

# Pre-testing installs
install:
  - echo "nothing needs to be installed"

# Scripts to be run such as tests
before_script:
  - echo "no tests"

script:
  - docker --version # print the version for logging
  - docker-compose -f docker-compose-build.yaml build --parallel
  - docker tag udagram-api-feed tdchien96/udagram-api-feed:v4 #feed
  - docker tag udagram-api-user tdchien96/udagram-api-user:v4 #user
  - docker tag udagram-frontend:local tdchien96/udagram-frontend:v4 #frontend
  - docker tag reverseproxy tdchien96/reverseproxy:v4 #reverseproxy

after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push tdchien96/udagram-api-feed:v4
  - docker push tdchien96/udagram-api-user:v4
  - docker push tdchien96/udagram-frontend:v4
  - docker push tdchien96/reverseproxy:v4

  # - kubectl apply -f backend-user-deployment.yaml
  # - kubectl apply -f backend-feed-deployment.yaml
  # - kubectl apply -f frontend-deployment.yaml
  # - kubectl apply -f reverseproxy-deployment.yaml
  # - kubectl apply -f backend-user-service.yaml
  # - kubectl apply -f backend-feed-service.yaml
  # - kubectl apply -f frontend-service.yaml
  # - kubectl apply -f reverseproxy-service.yaml


# deploy:
#   provider: script
#   script: bash ./deploy.sh
#   on:
#     branch: master